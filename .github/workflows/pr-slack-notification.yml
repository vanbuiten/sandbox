name: pr-slack-notification

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - ready_for_review
      - review_requested
      - closed
  issue_comment:
    types:
      - created
  pull_request_review:
    types:
      - submitted

permissions: read-all

defaults:
  run:
    shell: bash -euxo pipefail {0}

jobs:
  pr-slack-notification:
    runs-on: ubuntu-latest
    name: Sends a message to Slack when a PR is opened
    if: (github.event.action == 'opened' && github.event.pull_request.draft == false) || github.event.action == 'ready_for_review'
    steps:
      - name: Check if a slack message timestamp is already present in the cache
        uses: actions/cache@v4.2.3
        id: slack-message-timestamp
        with:
          key: slack-message-timestamp-for-pr-${{ github.event.pull_request.nr }}
          restore-keys: slack-message-timestamp-for-pr-${{ github.event.pull_request.nr }}

      - name: Post PR summary message to slack
        if: steps.slack-message-timestamp.outputs.cache-hit != 'true'
        id: message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.MY_SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.MY_SLACK_CHANNEL_ID }}
            text: "A PR has been created in repository ${{ github.repository }}: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}"

      - name: Post PR reaction
        if: steps.slack-message-timestamp.outputs.cache-hit == 'true'
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.MY_SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.MY_SLACK_CHANNEL_ID }}
            thread_ts: "${{ steps.slack-message-timestamp.outputs.cache-hit }}"
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":eyes: *1. Review the PR*\nAssign <${{ github.event.pull_request.html_url }}|PR #${{ github.event.pull_request.number }}> to yourself"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":seedling: *2. Deploy the PR on dev/acc*\nDeploy the branch to dev and/or acc"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":mag: *3. Check dev/acc*\nCheck if dev and/or acc are still working"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":twisted_rightwards_arrows: *4. Merge the PR*\nMerge the PR to main"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":label: *5. Create a new release*\nCreate a new release"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":rocket: *6. Deploy the new release to prod*\nDeploy the release to prod"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":mag_right: *7. Check prod*\nCheck if prod is still working"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":clock1: *8. Log time spent on PR review*\nTimetell code *${{secrets.TIMETELL_CODE}}*"
                }
              }
            ]

      - name: Create file with slack message timestamp
        if: steps.slack-message-timestamp.outputs.cache-hit != 'true'
        run: |
          echo "${{ steps.message.outputs.ts }}" > slack-message-timestamp.txt

      - name: Cache slack message timestamp
        if: steps.slack-message-timestamp.outputs.cache-hit != 'true'
        uses: actions/cache@v4.2.3
        with:
          path: slack-message-timestamp.txt
          key: slack-message-timestamp-for-pr-${{ github.event.pull_request.nr }}

  slack-emoji-react:
    runs-on: ubuntu-latest
    name: Adds emoji reaction to slack message when a PR is closed or reviewed
    if: ${{ startsWith(github.event.pull_request.html_url, 'https') || startsWith(github.event.issue.pull_request.html_url, 'https') }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Check if a slack message timestamp is already present in the cache
        uses: actions/cache@v4.2.3
        id: slack-message-timestamp
        with:
          key: slack-message-timestamp-for-pr-${{ github.event.pull_request.nr }}
          restore-keys: slack-message-timestamp-for-pr-${{ github.event.pull_request.nr }}

      - name: Decide which emoji to add
        if: steps.slack-message-timestamp.outputs.cache-hit == 'true'
        run: |
          case "${{ github.event.action }}" in
            submitted)
              case "${{ github.event.review.state }}" in
                changes_requested)
                  echo "EMOJI=repeat" >> "${GITHUB_ENV}"
                  ;;
                approved)
                  echo "EMOJI=ok" >> "${GITHUB_ENV}"
                  ;;
                commented)
                  echo "EMOJI=speech_balloon" >> "${GITHUB_ENV}"
                  ;;
              esac
              ;;
            review_requested)
              echo "EMOJI=eyes" >> "${GITHUB_ENV}"
              ;;
            closed)
              echo "EMOJI=x" >> "${GITHUB_ENV}"
              ;;
            *)
              echo "EMOJI=false" >> "${GITHUB_ENV}"
              ;;
          esac

      - name: React to PR summary message in slack with emoji
        if: ${{ steps.slack-message-timestamp.outputs.cache-hit == 'true' && env.EMOJI != 'false' }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: reactions.add
          token: ${{ secrets.MY_SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.MY_SLACK_CHANNEL_ID }}
            timestamp: "${{ steps.slack-message-timestamp.outputs.cache-hit }}"
            name: ${{ env.EMOJI }}

      - name: Update the original message with success
        if: ${{ github.event.pull_request.merged && steps.slack-message-timestamp.outputs.cache-hit == 'true' }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.update
          token: ${{ secrets.MY_SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.MY_SLACK_CHANNEL_ID }}
            ts: "${{ steps.slack-message-timestamp.outputs.cache-hit }}"
            text: ":twisted_rightwards_arrows: *${{ github.event.pull_request.user.login }}*: <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}> (+${{ github.event.pull_request.additions }}, -${{ github.event.pull_request.deletions }})"
            attachments:
              - color: "28a745"
                fields:
                  - title: "Status"
                    short: true
                    value: "Merged :twisted_arrows_right:"
